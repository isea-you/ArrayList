package com.isea.array;
public class ArrayList<E> {
    private E[] data;
    private int size;
    public ArrayList(int capacity){
        data = (E[]) new Object[capacity];
        size = 0;
    }
    public ArrayList(){
        this(10);
    }

    public int getSize(){
        return size;
    }

    public int getCapacity(){
        return data.length;
    }

    public boolean isEmpty(){
        return size == 0;
    }

    public void add(int index,E e){
        if (index < 0 || index > size){
            throw new ArrayIndexOutOfBoundsException("The array out of bounds,please change the param");
        }

        if (index == data.length){
            resize(data.length * 2);
        }

//       插入元素的有两种实现方式，第一种是直接使用java的API实现，第二种自己写一个算法

//        System.arraycopy(data,index,data,index + 1,size - index);

        for (int i = size ; i > index ; i --){
            data[i] = data[i - 1];
        }
        data[index] = e;
        size ++;
    }

    public void addFirst(E e){
        add(0,e);
    }

//    重载的add方法
    public void add(E e){
        add(size,e);
    }

    public void remove(int index){
        if (index < 0 || index >= size){
            throw new IllegalArgumentException("Remove fail,illegal index...");
        }

//        这里也有两张方法，一是使用java提供给的API，二是自己写一个算法
//        System.arraycopy(data,index + 1,data,index,size - 1 - index);
        for (int i = index + 1 ; i < size ; i ++){
                data[i - 1] = data[i];
        }
        size --;
        data[size] = null;

        if (size == data.length / 4){
            resize(data.length / 2);
        }
    }

    public void removeFirst(){
        remove(0);
    }

    public void removeLast(){
        remove(size -1);
    }

    public int indexOf(E e){
        if (e == null){
            for (int i = 0 ; i < size ; i ++){
                if (data[i] == null)
                    return i;
            }
        }else {
            for (int i = 0 ; i < size ; i ++){
                if (data[i].equals(e))
                    return i;
            }
        }
        return -1;
    }

    public boolean contians(E e){
        return indexOf(e) != -1;
    }

    public E get(int index){
        if (index > 0 || index < size){
            throw new IllegalArgumentException("Get fail,illegal index");
        }

        return data[index];
    }

    public void set(int index,E e){
        if (index > 0 || index < size){
            throw new IllegalArgumentException("Set fail, illegal index");
        }

        data[index] = e;
    }

//    删除元素为e的元素,没有这个元素，就认为删除了这个元素，不做任何的处理
    public void removeElement(E e){
        int index = indexOf(e);
        remove(index);
    }

    public E[] toArray(){
        E[] newData = (E[]) new Object[size];
        System.arraycopy(data, 0, newData, 0, size - 1);
        return newData;
    }

    private void resize(int newCapacity) {
        E[] newDate = (E[]) new Object[newCapacity];
        for (int i = 0; i < size ; i ++){
            newDate[i] = data[i];
        }
        data = newDate;
    }

    @Override
    public String toString(){
        StringBuilder res = new StringBuilder();
        res.append("Array:[");
        for (int i = 0 ; i < size ; i ++){
            res.append(data[i]);
            if (i != size - 1){
                res.append(',');
            }
        }
        res.append("]");
        return res.toString();
    }
}

测试方法：
package com.isea.array;

public class TestArray {
    public static void main(String[] args) {
        ArrayList arrayList = new ArrayList();
        for (int i = 0 ; i < 10 ; i ++) {
            arrayList.add(i);
        }
        System.out.println(arrayList);

        System.out.println("----------------删除索引位置为2的元素---------------------");
        arrayList.remove(2);
        System.out.println(arrayList);

        System.out.println("----------------删除元素值为5的元素---------------------");
        arrayList.removeElement(5);
        System.out.println(arrayList);
    }
}
结果为：
Array:[0,1,2,3,4,5,6,7,8,9]
----------------删除索引位置为2的元素---------------------
Array:[0,1,3,4,5,6,7,8,9]
----------------删除元素值为5的元素---------------------
Array:[0,1,3,4,6,7,8,9]


